<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerCar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(irandom_range(0,4)){
    case 0:
        sprite_index = spr_playerCar;
        break;
    case 1:
        sprite_index = spr_truckCar;
        break;
    case 2:
        sprite_index = spr_darkRedCar;
        break;
    case 3:
        sprite_index = spr_greenCar;
        break;
    case 4:
        sprite_index = spr_blueCar;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(x &lt; lane + 60){
    x+=2
    alarm[0]= 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Vsize = 60;
Hsize = 18;
offset = 12;


draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x - offset,y-5,x-offset-(Hsize),y-Vsize,x-offset+(Hsize),y-Vsize,c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);

draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x + offset,y-5,x+offset-(Hsize),y-Vsize,x+offset+(Hsize),y-Vsize,c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause == 0)
{
if(place_meeting(x,y,obj_playerCar)){

}
else if(place_meeting(x,y,obj_enemyCar)){

}
else if(canMove = 1){
    y += rightCarSpeed;
}
else
{
    y -= 3;
}
}

/*police turn signal
if(obj_police_front.y &lt; y - 200 &amp;&amp; obj_police_front.x &lt; x - 30 &amp;&amp; turnSignal == 1){
    turnSignal = 0;
    alarm[0] = 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyCar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(sprite_index){
        case spr_playerCar:
            sprite_index = spr_crashCar;
            break;
        case spr_greenCar:
            sprite_index = spr_greenCrashCar;
            break;
        case spr_darkRedCar:
            sprite_index = spr_redCrashCar;
            break;
        case spr_blueCar:
            sprite_index = spr_blueCrashCar;
            break;
        case spr_carFlame:
            sprite_index = spr_flameCrashCar;
            break;
        case spr_truckCar:
            sprite_index = spr_truckCrashCar;
            break;
        case spr_miniCar:
            sprite_index = spr_miniCrashCar;
            break;
        case spr_fordGTCar:
            sprite_index = spr_fordGTCrashCar;
            break;
        case spr_redSportsCar:
            sprite_index = spr_crashSportsCar;
            break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_playerCar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(sprite_index){
        case spr_playerCar:
            sprite_index = spr_crashCar;
            break;
        case spr_greenCar:
            sprite_index = spr_greenCrashCar;
            break;
        case spr_darkRedCar:
            sprite_index = spr_redCrashCar;
            break;
        case spr_blueCar:
            sprite_index = spr_blueCrashCar;
            break;
        case spr_carFlame:
            sprite_index = spr_flameCrashCar;
            break;
        case spr_truckCar:
            sprite_index = spr_truckCrashCar;
            break;
        case spr_miniCar:
            sprite_index = spr_miniCrashCar;
            break;
        case spr_fordGTCar:
            sprite_index = spr_fordGTCrashCar;
            break;
        case spr_redSportsCar:
            sprite_index = spr_crashSportsCar;
            break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y &gt; 600){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>23,50</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
