<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerCar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar skid;
skid = 1;
globalvar turnLeft;
turnLeft = 1;
globalvar turnRight;
turnRight = 1;
globalvar canMove;
canMove = 1;
globalvar willContinue;
willContinue = 1;

clickDir = 0;

switch(carColor){
    case 0:
        sprite_index = spr_playerCar;
        break;
    case 1:
        sprite_index = spr_greenCar;
        break;
    case 2:
        sprite_index = spr_darkRedCar;
        break;
    case 3:
        sprite_index = spr_blueCar;
        break;
    case 4:
        sprite_index = spr_carFlame;
        break;
    case 5:
        sprite_index = spr_truckCar;
        break;
    case 6:
        sprite_index = spr_miniCar;
        break;
    case 7:
        sprite_index = spr_fordGTCar;
        break;
    case 8:
        sprite_index = spr_redSportsCar;
        break;
}
alarmCounter = 16;
alarm[3] = 10;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alarmCounter &gt; 0){
    alarmCounter--;
    instance_create(x, y + 65, obj_carSmoke);
    alarm[3] = 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_angle != 0 &amp;&amp; !keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left) &amp;&amp; !mouse_check_button_pressed(mb_left)){
    image_angle += 2.5;
    x+= 2.5;
    alarm[1] = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_angle != 0 &amp;&amp; !keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left) &amp;&amp; !mouse_check_button_pressed(mb_left)){
    image_angle -= 2.5;
    x-= 2.5;
    alarm[0] = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Vsize = 60;
Hsize = 18;
Yoffset = 5;
Xoffset = 12;
rightTriangleAngleXOffset = 13*cos((arctan(Yoffset/Xoffset)) - (image_angle * (pi/180)));
leftTriangleAngleXOffset = 13*cos((arctan(Yoffset/(Xoffset*-1))) - (image_angle * (pi/180)));
angleYOffset = 13*sin((arctan(Yoffset/Xoffset)) - (image_angle * (pi/180)));;

//left triangle
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x - Xoffset,y-Yoffset,(x-Xoffset) + 40*cos((120-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((120 - image_angle + 180)*(pi/180)),(x-Xoffset) + 40*cos((60-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((60 - image_angle + 180)*(pi/180)),c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
//right triangle
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x + Xoffset,y-Yoffset,(x+Xoffset) + 40*cos((120-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((120 - image_angle + 180)*(pi/180)),(x+Xoffset) + 40*cos((60-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((60 - image_angle + 180)*(pi/180)),c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y,obj_rightLamp) &amp;&amp; willContinue == 1
{
    switch(carColor){
        case 0:
            sprite_index = spr_crashCar;
            break;
        case 1:
            sprite_index = spr_greenCrashCar;
            break;
        case 2:
            sprite_index = spr_redCrashCar;
            break;
        case 3:
            sprite_index = spr_blueCrashCar;
            break;
        case 4:
            sprite_index = spr_flameCrashCar;
            break;
        case 5:
            sprite_index = spr_truckCrashCar;
            break;
        case 6:
            sprite_index = spr_miniCrashCar;
            break;
        case 7:
            sprite_index = spr_fordGTCrashCar;
            break;
        case 8:
            sprite_index = spr_crashSportsCar;
            break;
    }
    scrp_crash();
}
if place_meeting(x,y,obj_leftLamp) &amp;&amp; willContinue == 1
{
    switch(carColor){
        case 0:
            sprite_index = spr_crashCar;
            break;
        case 1:
            sprite_index = spr_greenCrashCar;
            break;
        case 2:
            sprite_index = spr_redCrashCar;
            break;
        case 3:
            sprite_index = spr_blueCrashCar;
            break;
        case 4:
            sprite_index = spr_flameCrashCar;
            break;
        case 5:
            sprite_index = spr_truckCrashCar;
            break;
        case 6:
            sprite_index = spr_miniCrashCar;
            break;
        case 7:
            sprite_index = spr_fordGTCrashCar;
            break;
        case 8:
            sprite_index = spr_crashSportsCar;
            break;
    }
    scrp_crash();
}
if place_meeting(x,y,obj_rail) &amp;&amp; willContinue == 1
{
    switch(carColor){
        case 0:
            sprite_index = spr_crashCar;
            break;
        case 1:
            sprite_index = spr_greenCrashCar;
            break;
        case 2:
            sprite_index = spr_redCrashCar;
            break;
        case 3:
            sprite_index = spr_blueCrashCar;
            break;
        case 4:
            sprite_index = spr_flameCrashCar;
            break;
        case 5:
            sprite_index = spr_truckCrashCar;
            break;
        case 6:
            sprite_index = spr_miniCrashCar;
            break;
        case 7:
            sprite_index = spr_fordGTCrashCar;
            break;
        case 8:
            sprite_index = spr_crashSportsCar;
            break;
    }
    scrp_crash();
}
if place_meeting(x,y,obj_enemyCar) &amp;&amp; willContinue == 1
{
    switch(carColor){
        case 0:
            sprite_index = spr_crashCar;
            break;
        case 1:
            sprite_index = spr_greenCrashCar;
            break;
        case 2:
            sprite_index = spr_redCrashCar;
            break;
        case 3:
            sprite_index = spr_blueCrashCar;
            break;
        case 4:
            sprite_index = spr_flameCrashCar;
            break;
        case 5:
            sprite_index = spr_truckCrashCar;
            break;
        case 6:
            sprite_index = spr_miniCrashCar;
            break;
        case 7:
            sprite_index = spr_fordGTCrashCar;
            break;
        case 8:
            sprite_index = spr_crashSportsCar;
            break;
    }
    scrp_crash();
}
if place_meeting(x,y,obj_coin) &amp;&amp; willContinue == 1
{
    with(obj_coin){
        instance_destroy();
    }
    instance_create(550, 50, obj_scoreAdd);
    audio_play_sound(sound_coin,0,0);
    global.points += 100;
    cash += 1;
    coinCount++;
}


/*if place_meeting(x,y,obj_police_front) &amp;&amp; willContinue == 1
{
    sprite_index = spr_crashCar;
    scrp_crash();
}
/*if !place_meeting(x,y,obj_police)
{
    hspeed = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrp_setSpeed</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause == 0)
{
push = 1;
if !keyboard_check(vk_left) &amp;&amp; canMove == 1{
    if place_free(x+15,y){
        x+=10;
        if(image_angle &gt;= -20){
            image_angle -= 5;
        }
        /*if(image_angle &lt;= -25){
            instance_create(x - 10, y + 75,obj_skid);
            instance_create(x + 10, y + 75,obj_skid);
        }*/
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause == 0)
{
push = 1;
if !keyboard_check(vk_right) &amp;&amp; canMove == 1{
    if place_free(x-15,y){
        x-=10;
        if(image_angle &lt;= 20){
            image_angle += 5;
        }
        /*if(image_angle &gt;= 25){
            instance_create(x - 10, y + 75,obj_skid);
            instance_create(x + 10, y + 75,obj_skid);                               
        }*/
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_right) &amp;&amp; keyboard_check(vk_left) &amp;&amp; canMove == 1{
    image_angle = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(clickDir = 1 &amp;&amp; canMove == 1){
    alarm[0] = 1;
    skid = 1;
    clickDir = 0;
}
else if(clickDir = 2 &amp;&amp; canMove == 1){
    alarm[1] = 1;
    skid = 1;
    clickDir = 0;
}
else{
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause == 0)
{
push = 1
    if(mouse_x  &lt;= 640/2 &amp;&amp; canMove == 1){
        clickDir = 1
        x-=10;
        if(image_angle &lt;= 20){
            image_angle += 5;
        }
    }
    if(mouse_x  &gt; 640/2 &amp;&amp; canMove == 1){
        clickDir = 2
        x+=10;
        if(image_angle &gt;= -20){
            image_angle -= 5;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>push = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !keyboard_check(vk_left) &amp;&amp; canMove == 1{
    alarm[1] = 1;
    skid = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !keyboard_check(vk_right &amp;&amp; canMove == 1){
    alarm[0] = 1;
    skid = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-1,-35</point>
    <point>47,-35</point>
    <point>47,65</point>
  </PhysicsShapePoints>
</object>
