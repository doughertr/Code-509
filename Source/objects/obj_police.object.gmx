<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_police</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siren = "blue"
alarm[0] = 25
alarm[2] = 200
dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siren = "blue";
alarm[0] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siren = "red";
alarm[1] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Vsize = 60;
Hsize = 18;
Yoffset = 40;
Xoffset = 12;
rightTriangleAngleXOffset = 13*cos((arctan(Yoffset/Xoffset)) - (image_angle * (pi/180)));
leftTriangleAngleXOffset = 13*cos((arctan(Yoffset/(Xoffset*-1))) - (image_angle * (pi/180)));
angleYOffset = 13*sin((arctan(Yoffset/Xoffset)) - (image_angle * (pi/180)));;

//left triangle
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x - Xoffset,y-Yoffset,(x-Xoffset) + 40*cos((120-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((120 - image_angle + 180)*(pi/180)),(x-Xoffset) + 40*cos((60-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((60 - image_angle + 180)*(pi/180)),c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
//right triangle
draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_triangle_colour(x + Xoffset,y-Yoffset,(x+Xoffset) + 40*cos((120-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((120 - image_angle + 180)*(pi/180)),(x+Xoffset) + 40*cos((60-image_angle + 180)*(pi/180)),(y-Yoffset) + 60*sin((60 - image_angle + 180)*(pi/180)),c_yellow,c_black,false, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(siren == "blue"){
    size1 = 50;
    yOffset1 = 10;
    xOffset1 = 8;
    draw_set_blend_mode(bm_subtract);
    surface_set_target(light);
    draw_ellipse_colour((x+xOffset1) - size1,(y+yOffset1) + size1, (x+xOffset1) + size1, (y+yOffset1)- size1,c_blue,c_black,false);
    surface_reset_target();
    draw_set_blend_mode(bm_normal);
}
else if(siren == "red"){
    size2 = 50;
    yOffset2 = 10;
    xOffset2 = -8;
    draw_set_blend_mode(bm_subtract);
    surface_set_target(light);
    draw_ellipse_colour((x+xOffset2) - size2,(y+yOffset2) + size2, (x+xOffset2) + size2, (y+yOffset2)- size2,c_red,c_black,false);
    surface_reset_target();
    draw_set_blend_mode(bm_normal);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(canMove == 1){
    y += backgroundSpeed;
}*/
//image_angle = direction - 90;
if(global.pause ==0){
    if(y == 700 &amp;&amp; willContinue == 1 ){
        moveBack = 1;
    }
    if(moveBack == 0 &amp;&amp; global.pause == 0){
        mp_potential_step_object(obj_playerCar.x + 50, 700, 4, obj_enemyCar)
        mp_potential_settings(360,360, 100, 1);
        
    }else{
        mp_potential_step_object(640/2, 1150, moveBackSpeed, obj_enemyCar)
        mp_potential_settings(360,360, 100, 1);    
    }
}
//AI pathfinder
/*dir = direction;
grid = mp_grid_create(0,0,room_width/4,(room_height/4) + 10,4,4);
path = path_add();
mp_grid_add_instances(grid,obj_enemyCar,1);
mp_potential_settings(360,50, 50, 1);
mp_grid_path(grid,path,x,y,obj_playerCar.x + 50, obj_playerCar.y + 150 , 1);
path_start(path,4,0,1); */


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-1,0</point>
    <point>47,0</point>
    <point>47,100</point>
  </PhysicsShapePoints>
</object>
